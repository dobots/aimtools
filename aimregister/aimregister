#!/bin/bash

# Author: Anne C. van Rossum
# License: GNU LGPLv3 
# Date: Jun. 17, 2012

PROGRAM="aimregister"

VERSION="0.2"

#######################################################################################################################
# Default configuration
#######################################################################################################################

AIM_CONFIG_PATH=/etc/aim
AIM_CONFIG_FILE=/etc/aim/config.sh

source $AIM_CONFIG_FILE
source $AIM_CONFIG_COLOR
source $AIM_CONFIG_SANITY

#######################################################################################################################
# User configuration
#######################################################################################################################

if [ -e ${RUR_CONFIG_FILE_BACKENDS} ]; then
	source $RUR_CONFIG_FILE_BACKENDS
fi

#######################################################################################################################
# Argument checks
#######################################################################################################################

# Check if we have sudo rights, we should NOT
if [ `id -u` -eq 0 ]
then
	msg_error "Sorry, should NOT be run as super user":
	exit 1
fi

if [[ "$1" == "" ]]
then
	msg_error "No args supplied! Run $0 -h for more info"
	exit 1
fi

if [[ "$1" == "-h" ]]
then
	echo $VERSION \- Usage
	echo 
	echo $PROGRAM \"ModuleName\"
	echo
	exit 0 
fi 

#######################################################################################################################
# Actual script content
#######################################################################################################################

mkdir -p $RUR_DATA_PATH
mkdir -p $RUR_REGISTRY_PATH

MODULE_NAME=${1%/}

echo "[#] Check ${MODULE_NAME} directory and default build location if there is a compiled binary"
if [ -e "${MODULE_NAME}" ]; then
	if [ -e "${MODULE_NAME}/${BUILD_FOLDER}/${MODULE_NAME}" ]; then
		echo "[#] Add \"${MODULE_NAME}\" to registry"
	else
		echo "[#] Cannot find \"${MODULE_NAME}/${BUILD_FOLDER}/${MODULE_NAME}\""
		echo "[#] Make sure naming is consistent and the binary built properly"
		exit 0
	fi
else
	echo "[#] Cannot find \"${MODULE_NAME}\""
	exit 0
fi

FULL_MODULE_NAME="$(readlink --canonicalize --no-newline $MODULE_NAME)"
echo "[#] Full name to register: ${FULL_MODULE_NAME}"

echo "$MODULE_NAME = $FULL_MODULE_NAME" >> "${AIM_REGISTRY}"

# Remove duplicate entries
echo "[#] Remove duplicate entries from registry"
uniq "${AIM_REGISTRY}" | tac > reversed.txt
awk '!x[$1]++' FS=\= reversed.txt | tac > "${AIM_REGISTRY}"
rm reversed.txt

# Create registry directory with port names for each module
echo "[#] Use rur-builder with specific backend \"extract\" to extract the ports from the idl file"
if [ ! -e "${RUR_BACKENDS_PATH}/extract.py" ]; then
	echo "[#] Error: there is no extract backend in ${RUR_BACKENDS_PATH}. Did you install a recent version of the rur-builder?"
	exit 0
fi
omniidl -p${RUR_BACKENDS_PATH} -bextract ${MODULE_NAME}/aim/idl/${MODULE_NAME}.idl > "ports.txt"

echo "[#] Write port definition to ${MODULE_NAME}.ports file in registry"
mv ports.txt ${RUR_REGISTRY_PATH}/${MODULE_NAME}.ports

