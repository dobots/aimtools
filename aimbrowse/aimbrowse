#!/bin/bash

# Author: Anne C. van Rossum
# License: GNU LGPLv3 
# Date: Oct. 02, 2013

PROGRAM="aimbrowse"

VERSION="0.3"

#######################################################################################################################
# Default configuration
#######################################################################################################################

AIM_CONFIG_PATH=/etc/aim
AIM_CONFIG_FILE=/etc/aim/config.sh

source $AIM_CONFIG_FILE
source $AIM_CONFIG_COLOR
source $AIM_CONFIG_SANITY

#######################################################################################################################
# Checks
#######################################################################################################################

if [[ $AIM_VERSION != $VERSION ]]; then
	msg_error "${PROGRAM} is version ${VERSION}, while it should be version ${AIM_VERSION}."
	exit 0
fi

if [[ "$1" == "-h" ]]; then
	echo "$PROGRAM $VERSION - Usage"
	echo 
	echo "$PROGRAM [output]"
	echo "  no arguments required, but if output file defined, will write results to that file"
	echo
	echo "Dependency: curl"
	exit 0 
fi

resultfile=
if [[ "$1" != "" ]]; then
	resultfile=$1
else
	msg_init $PROGRAM
fi

#######################################################################################################################
# Implementation
#######################################################################################################################

# echo "Run curl with: " https://github.com/search?q=aim-config+in:path+config.aim+extension:aim&type=Code

# do NOT use quotes here
search_file=aim_deployment.json

# do NOT use quotes here
search_str=https://github.com/search\?q\=$search_file+in%3Apath+aim-core\&type\=Code

msg_info "Use as link: $search_str"
#search_str="https://github.com/search\?q\=aim-config+in%3Apath+config.aim+extension%3Aaim\&type\=Code"

# again, do NOT use quotes here
text=$(curl -s $search_str | grep $search_file | grep title | grep href)
#echo $text > tmp.txt

repos_txt=$(echo "$text" | cut -f2 -d'=' | cut -f2 -d'/')

repos_project_txt=$(echo "$text" | cut -f2 -d'=' | cut -f3 -d'/')

file_txt=$(echo "$text" | cut -f3 -d'=' | cut -f2 -d'"')

module_txt=$(echo "$file_txt" | cut -f1 -d'/')

IFS=$'\n' read -d '' -r -a repos <<< "$repos_txt"
IFS=$'\n' read -d '' -r -a module <<< "$module_txt"
IFS=$'\n' read -d '' -r -a repos_project <<< "$repos_project_txt"

nof_repos=${#repos[@]}
nof_modules=${#module[@]}

if [ "$nof_repos" -ne "$nof_modules" ] ; then
	msg_warning "The number of elements $nof_elements and modules $nof_modules is different. Exit."
	exit
else
	msg_info "There are $nof_modules modules that could be found online."
fi

for (( i=0; i<$nof_modules; i++ )); do
	msg_info "Repository \"${repos[$i]}\" contains module \"${module[$i]}\""
done

if [[ "$resultfile" != "" ]]; then
	rm -f $resultfile
	msg_info "Write results to $resultfile"
	for (( i=0; i<$nof_modules; i++ )); do
		echo " ${module[$i]} ${repos[$i]} ${repos_project[$i]}" >> $resultfile 
	done
fi
