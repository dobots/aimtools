#!/bin/bash

# Author: Anne C. van Rossum
# License: GNU LGPLv3 
# Date: Jun. 17, 2012

PROGRAM="aimrun"

VERSION="0.3"

#######################################################################################################################
# Default configuration
#######################################################################################################################

AIM_CONFIG_PATH=/etc/aim
AIM_CONFIG_FILE=/etc/aim/config.sh

source $AIM_CONFIG_FILE
source $AIM_CONFIG_COLOR
source $AIM_CONFIG_SANITY
source $AIM_CONFIG_REGISTRY_CHECK

msg_init $PROGRAM

#######################################################################################################################
# User configuration
#######################################################################################################################

if [ -e ${RUR_CONFIG_FILE_BACKENDS} ]; then
	source $RUR_CONFIG_FILE_BACKENDS
fi

#######################################################################################################################
# Argument checks
#######################################################################################################################

if [[ $AIM_VERSION != $VERSION ]]; then
	msg_error "${PROGRAM} is version ${VERSION}, while it should be version ${AIM_VERSION}."
	exit 0
fi

if [[ "$1" == "" ]]
then
	msg_error "No args supplied! Run $0 -h for more info"
	exit 1
fi

if [[ "$1" == "-h" ]]
then
	echo "$PROGRAM $VERSION - Usage"
	echo 
	echo "$PROGRAM \"[module name]\" \"module id\""
	echo
	exit 0 
fi 

if [[ $# -lt 1 ]]; then
	msg_error "We need at least 1 parameter. Run $0 -h for more info, currently you used $# parameters"
	exit 1
fi

if [[ "$2" == "" ]]; then
	# there is only one argument, so $1 must then be the module id, and it must be run from the directory itself
	modulename=${PWD##*/}
	cd ..
	ModuleId=$1
else
	modulename=${1%/}
	ModuleId=$2

	# Shift so, $@ becomes second argument (id) and further on
	shift
fi

#######################################################################################################################
# Start
#######################################################################################################################

msg_info "Search in ${AIM_REGISTRY}"
SUCCESS=false
reg_check $modulename MODULEFULLNAME
if [[ "$MODULEFULLNAME" != "" ]]; then
	SUCCESS=true
fi

target=host
source ${MODULEFULLNAME}/aim-core/middleware_default.aim
source ${MODULEFULLNAME}/aim-devel/middleware_local.aim
msg_info "Running for middleware \"$middleware\" and platform \"$target\""

BUILD_FOLDER=builds/${middleware}

# After having found the location in the registry, remove the reference to git/repo from the modulename to properly start the module
modulename=$(basename $modulename)

if [[ $SUCCESS == true ]]; then
	msg_info "Run: \"$MODULEFULLNAME/$BUILD_FOLDER/$modulename $@\" (includes all command-line arguments)"
	msg_info "The output of the module itself is in between two horizontal lines:"
	echo "--------------------------------------------------------------------------------"
	$MODULEFULLNAME/$BUILD_FOLDER/$modulename "$@"
	echo "--------------------------------------------------------------------------------"
	msg_info "Exit of \"$modulename\" (error code is not returned)"
	exit 0
else
	msg_warning "No such module found ($modulename). Did you use aimregister to register this module on this machine?"
	exit 1
fi


