/**
 * IDL description of the TemplateModule
 *
 * This file is automatically parsed by the rurbuilder backends for the omniidl 
 * compiler. The names of the functions will become port identifiers. The names 
 * of the function variables are not used. For now, if the function variable 
 * ends with a number, like "void Sensor(in long input2);" there will be two
 * portnames created.
 *
 * Author: 
 * Copyright: 
 * Date: 
 * License: 
 */

// Recommended namespace "rur"
module rur {

// The command-line parameters
struct Param {
  // multiple modules can be addressed in parallel, killed, etc. using "module_id"
  string module_id;
  // a certain parameter over the command-line (long becomes int) 
  long parameter;
};

// Typedef for array of integers
typedef sequence<long> long_seq;

// We want to be able to give our class a name
interface TemplateModule {

  // Input from microphone in the form of an array
  void Audio(in long_seq input);

  // Input from infrared sensor
  void Infrared(in long sensor_l);

  // A command to one of the wheels
  void LeftWheel(out long output);

};

};
